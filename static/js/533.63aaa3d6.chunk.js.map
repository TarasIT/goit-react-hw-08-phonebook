{"version":3,"file":"static/js/533.63aaa3d6.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 20px;\n  font-size: 18px;\n  font-weight: 500;\n\n  :not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  min-height: 30px;\n  min-width: 300px;\n  border-radius: 5px;\n  border: 1px solid black;\n  font-size: 18px;\n`;\n\nexport const SubmitBtn = styled.button`\n  min-width: 150px;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid black;\n  font-size: 18px;\n  background-color: #e2e2e2;\n\n  :hover,\n  :focus {\n    background-color: #c4c4c4;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\nexport const selectContactsFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormLabel, SubmitBtn } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const sameContact = contacts.find(\n      ({ name }) =>\n        name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n    if (sameContact !== undefined) {\n      form.reset();\n      return alert(`${sameContact.name} is already in contacts!`);\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 768px;\n  margin-left: auto;\n  margin-right: auto;\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n  :hover,\n  :focus {\n    background-color: #b4b3b3;\n  }\n`;\n\nexport const Contact = styled.p`\n  word-break: break-all;\n  font-size: 18px;\n`;\n\nexport const Number = styled.span`\n  margin-left: 10px;\n  font-weight: 500;\n`;\n\nexport const ContactsDeleteBtn = styled.button`\n  min-width: 120px;\n  margin-left: auto;\n  height: 30px;\n  border-radius: 5px;\n  border: 1px solid black;\n  font-size: 18px;\n  background-color: #d1d1d1b8;\n\n  :hover,\n  :focus {\n    background-color: #b4b3b3;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { Contact, ContactsDeleteBtn, Item, Number } from './ContactItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\n\nexport const ContactItem = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  return (\n    <Item>\n      <Contact>\n        {name}: <Number>{number}</Number>\n      </Contact>\n\n      <ContactsDeleteBtn\n        type=\"button\"\n        onClick={e => {\n          dispatch(deleteContact(id));\n          filter && dispatch(filterContacts(''));\n        }}\n      >\n        Delete\n      </ContactsDeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = ({ children }) => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, id, number }) => {\n        return <ContactItem key={id} name={name} id={id} number={number} />;\n      })}\n      {children}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-right: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  min-height: 30px;\n  min-width: 300px;\n  border-radius: 5px;\n  border: 1px solid black;\n  font-size: 18px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\nimport { FilterContainer, FilterInput, FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const inputValue = useSelector(selectContactsFilter);\n\n  return (\n    <FilterContainer>\n      <FilterLabel>\n        Find a contact by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          value={inputValue}\n          onChange={e => dispatch(filterContacts(e.target.value.trim()))}\n          required\n        />\n      </FilterLabel>\n    </FilterContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Spiner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 10px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Spiner } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Spiner>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"50\"\n        visible={true}\n      />\n    </Spiner>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Phonebook = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  border-right: 1px solid;\n  border-left: 1px solid;\n  border-bottom: 1px solid;\n  padding: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const Contacts = styled.h2`\n  margin-bottom: 20px;\n  padding-top: 20px;\n  border-top: 1px solid black;\n  text-align: center;\n`;\n\nexport const NoContactsMessage = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  selectContacts,\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport {\n  Contacts,\n  Phonebook,\n  NoContactsMessage,\n  Title,\n} from './Contacts.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <Phonebook>\n        <Title>Phonebook</Title>\n        <ContactForm />\n\n        {contacts.length !== 0 ? (\n          <>\n            <Contacts>Your contacts</Contacts>\n            <Filter />\n            {filteredContacts.length !== 0 ? (\n              <ContactList />\n            ) : (\n              <NoContactsMessage>No matches found</NoContactsMessage>\n            )}\n          </>\n        ) : (\n          <NoContactsMessage>\n            There are no contacts yet. Please fill the form to add a new one!\n          </NoContactsMessage>\n        )}\n\n        {isLoading && !error && <Loader />}\n      </Phonebook>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormLabel","FormInput","SubmitBtn","selectIsLoading","state","contacts","isLoading","selectError","error","selectContacts","items","selectContactsFilter","filter","selectFilteredContacts","createSelector","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","sameContact","find","elements","value","undefined","reset","alert","addContact","number","type","pattern","title","required","Item","Contact","Number","ContactsDeleteBtn","ContactItem","id","onClick","deleteContact","filterContacts","List","ContactList","children","filteredContacts","map","FilterContainer","FilterLabel","FilterInput","Filter","inputValue","onChange","trim","Spiner","Loader","strokeColor","strokeWidth","animationDuration","width","visible","Phonebook","Title","Contacts","NoContactsMessage","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}